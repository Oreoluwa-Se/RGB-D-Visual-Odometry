#ifndef COMMON_HPP
#define COMMON_HPP

// GENERAL COMPONENTS
#include <algorithm>
#include <iostream>
#include <list>
#include <memory>
#include <mutex>
#include <random>
#include <set>
#include <string>
#include <unordered_map>
#include <vector>

// CONSTANTS
const std::vector<double> chi2inv95 = {0,
                                       3.841458820694124,
                                       5.991464547107981,
                                       7.814727903251177,
                                       9.487729036781154,
                                       11.07049769351635,
                                       12.59158724374398,
                                       14.06714044934017,
                                       15.50731305586545,
                                       16.91897760462044,
                                       18.30703805327515,
                                       19.67513757268249,
                                       21.02606981748306,
                                       22.36203249482694,
                                       23.68479130484057,
                                       24.99579013972863,
                                       26.29622760486423,
                                       27.58711163827532,
                                       28.86929943039263,
                                       30.14352720564617,
                                       31.41043284423091,
                                       32.6705733409173,
                                       33.92443847144379,
                                       35.17246162690805,
                                       36.41502850180734,
                                       37.65248413348279,
                                       38.88513865983008,
                                       40.11327206941362,
                                       41.33713815142738,
                                       42.55696780429268,
                                       43.77297182574219,
                                       44.98534328036513,
                                       46.19425952027845,
                                       47.39988391908087,
                                       48.60236736729416,
                                       49.80184956820188,
                                       50.9984601657106,
                                       52.19231973010289,
                                       53.38354062296929,
                                       54.57222775894174,
                                       55.75847927888704,
                                       56.94238714682412,
                                       58.12403768086811,
                                       59.30351202689982,
                                       60.48088658233645,
                                       61.65623337627959,
                                       62.8296204114082,
                                       64.00111197221806,
                                       65.17076890356991,
                                       66.33864886296891,
                                       67.50480654954127,
                                       68.66929391228581,
                                       69.8321603398482,
                                       70.99345283378231,
                                       72.15321616702313,
                                       73.31149302908341,
                                       74.46832415930936,
                                       75.62374846937614,
                                       76.77780315606155,
                                       77.93052380523042,
                                       79.08194448784879,
                                       80.23209784876281,
                                       81.38101518889917,
                                       82.52872654147185,
                                       83.67526074272101,
                                       84.82064549765674,
                                       85.96490744123091,
                                       87.1080721953219,
                                       88.25016442187419,
                                       89.39120787250798,
                                       90.53122543488072,
                                       91.67023917605469,
                                       92.80827038310771,
                                       93.94533960119232,
                                       95.0814666692433,
                                       96.21667075350355,
                                       97.35097037903265,
                                       98.48438345934034,
                                       99.61692732428394,
                                       100.74861874635,
                                       101.8794739654358,
                                       103.0095087122262,
                                       104.1387382302737,
                                       105.2671772968603,
                                       106.3948402427226,
                                       107.5217409707194,
                                       108.6478929735077,
                                       109.7733093502879,
                                       110.8980028226843,
                                       112.0219857498078,
                                       113.1452701425551,
                                       114.2678676771939,
                                       115.389789708267,
                                       116.5110472808736,
                                       117.6316511423454,
                                       118.7516117533672,
                                       119.8709392985671,
                                       120.9896436966095,
                                       122.1077346098195,
                                       123.2252214533618,
                                       124.3421134040042,
                                       125.4584194084827,
                                       126.5741481914943,
                                       127.6893082633383,
                                       128.8039079272179,
                                       129.9179552862288,
                                       131.0314582500484,
                                       132.1444245413365,
                                       133.2568617018678,
                                       134.3687770984111,
                                       135.4801779283594,
                                       136.5910712251353,
                                       137.7014638633705,
                                       138.8113625638844,
                                       139.9207738984558,
                                       141.0297042944099,
                                       142.1381600390264,
                                       143.2461472837745,
                                       144.3536720483855,
                                       145.4607402247647,
                                       146.5673575807672,
                                       147.6735297638178,
                                       148.7792623044041,
                                       149.8845606194415,
                                       150.989430015505,
                                       152.0938756919582,
                                       153.1979027439567,
                                       154.3015161653504,
                                       155.4047208514822,
                                       156.5075216018851,
                                       157.60992312289,
                                       158.711930030134,
                                       159.8135468509983,
                                       160.9147780269433,
                                       162.0156279157815,
                                       163.1161007938603,
                                       164.2162008581853,
                                       165.3159322284586,
                                       166.4152989490638,
                                       167.5143049909776,
                                       168.61295425362,
                                       169.7112505666489,
                                       170.8091976916949,
                                       171.9067993240401,
                                       173.0040590942451,
                                       174.1009805697265,
                                       175.1975672562818,
                                       176.2938225995705,
                                       177.389749986549,
                                       178.4853527468599,
                                       179.5806341541812,
                                       180.6755974275342,
                                       181.7702457325557,
                                       182.8645821827234,
                                       183.9586098405564,
                                       185.0523317187726,
                                       186.145750781418,
                                       187.2388699449535,
                                       188.3316920793298,
                                       189.4242200090044,
                                       190.5164565139577,
                                       191.6084043306628,
                                       192.7000661530269,
                                       193.7914446333243,
                                       194.8825423830799,
                                       195.9733619739492,
                                       197.0639059385607,
                                       198.1541767713417,
                                       199.2441769293169,
                                       200.3339088328969,
                                       201.4233748666301,
                                       202.5125773799402,
                                       203.6015186878585,
                                       204.6902010717094,
                                       205.7786267798057,
                                       206.866798028108,
                                       207.9547170008703,
                                       209.042385851279,
                                       210.1298067020601,
                                       211.2169816460856,
                                       212.3039127469525,
                                       213.3906020395573,
                                       214.4770515306508,
                                       215.5632631993768,
                                       216.6492389978069,
                                       217.7349808514488,
                                       218.8204906597564,
                                       219.9057702966149,
                                       220.9908216108282,
                                       222.0756464265754,
                                       223.1602465438775,
                                       224.2446237390357,
                                       225.3287797650733,
                                       226.4127163521544,
                                       227.4964352080022,
                                       228.5799380183052,
                                       229.6632264471097,
                                       230.7463021372105,
                                       231.8291667105274,
                                       232.9118217684764,
                                       233.9942688923248};

// EIGEN COMPONENTS
#include <eigen3/Eigen/Core>
#include <eigen3/Eigen/Geometry>

template <int Rows = Eigen::Dynamic, int Cols = Rows, bool UseRowMajor = false,
          typename T = double>
using matrix = typename std::conditional<
    Rows != 1 && Cols != 1,
    Eigen::Matrix<T, Rows, Cols,
                  UseRowMajor ? Eigen::RowMajor : Eigen::ColMajor>,
    Eigen::Matrix<T, Rows, Cols>>::type;

template <int Dim = Eigen::Dynamic, bool RowVec = false, typename T = double>
using vector = typename std::conditional<RowVec, matrix<1, Dim, false, T>,
                                         matrix<Dim, 1, false, T>>::type;

using quaternion = Eigen::Quaternion<double>;

// OPENCV COMPONENTS
#include <opencv4/opencv2/core.hpp>
#include <opencv4/opencv2/opencv.hpp>

// SOPHUS COMPONENTS
#include <sophus/se3.hpp>
#include <sophus/so3.hpp>
typedef Sophus::SE3d SE3;
typedef Sophus::SO3d SO3;

// LOGGING INFORMATION
#include <glog/logging.h>

#endif